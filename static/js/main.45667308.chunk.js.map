{"version":3,"sources":["components/aside.module.scss","components/modules/pagination.module.scss","components/modules/user.module.scss","components/aside-header.module.scss","components/main-header.module.scss","components/main-editor.module.scss","components/main-textarea.module.scss","components/main.module.scss","components/messenger.module.scss","components/modules/profile.module.scss","components/avatar.tsx","constants/routes.ts","libs/date.ts","libs/shallowEqual.tsx","themes/dark.ts","themes/light.ts","themes/index.tsx","components/modules/user.tsx","components/aside-contacts.tsx","constants/webservices.ts","libs/rest.ts","store/theme/types.ts","store/theme/actions.ts","components/aside.tsx","containers/aside-contacts.tsx","components/modules/inputs.tsx","components/aside-header.tsx","containers/aside-header.tsx","components/aside-members.tsx","containers/aside-members.tsx","containers/aside.tsx","components/main-header.tsx","containers/main-header.tsx","components/main-textarea.tsx","libs/data.ts","components/main-editor.tsx","components/modules/pagination.tsx","components/main-messages.tsx","components/main.tsx","containers/main.tsx","components/modules/profile.tsx","components/messenger.tsx","containers/messenger.tsx","serviceWorker.ts","store/theme/reducers.ts","constants/localStorage.ts","store/index.tsx","index.tsx","components/main-messages.module.scss","components/avatar.module.scss"],"names":["module","exports","AvatarSizeType","ROUTE_MESSENGER_CHAT","fromNow","timestamp","difference","Math","floor","Date","now","yearsDifference","monthsDifference","weeksDifference","daysDifference","hoursDifference","minutesDifference","shallowEqual","value","other","isObject","omit","functions","isEqual","dark","palette","type","primary","light","colors","indigo","main","contrastText","secondary","pink","direction","localStorage","getItem","themes","DARK","LIGHT","themeGenerator","theme","document","querySelector","setAttribute","createMuiTheme","typography","fontFamily","shape","borderRadius","faIR","enUS","memo","props","useSelector","state","ThemeProvider","CssBaseline","children","className","styles","avatar","size","SMALL","small","LARGE","large","style","backgroundColor","color","backgroundImage","undefined","unreadCount","avatar_badge","initials","Button","fullWidth","user","onClick","contents","name","time","message","dir","contacts","map","contact","openUserPopup","id","MEDIUM","key","charAt","BASE_URL","GET_CONTACTS","GET_MEMBERS","GET_MESSAGES","axios","defaults","headers","common","post","ThemeType","restHandler","request","urlParams","param","url","replace","setRestParams","AsideTabs","toggleAsideStatus","payload","setPopupUser","AsideContacts","dispatch","useDispatch","useState","setContacts","useEffect","then","res","data","find","c","RoundedTextField","withStyles","root","padding","borderColor","borderWidth","TextField","anchorEl","setAnchorEl","closeMenu","header","IconButton","e","currentTarget","Menu","keepMounted","open","onClose","MenuItem","placeholder","variant","toggleTheme","AsideHeader","members","member","memoryHistory","push","closeAside","AsideMembers","setMembers","CHATS","index","setIndex","aside","asideStatus","active","isInChat","full_width","axis","onChangeIndex","AppBar","position","Tabs","indicatorColor","onChange","v","Tab","CONTACTS","icon","Aside","useParams","toggleAside","MainHeader","useLocation","editorRef","useRef","EditorState","createEmpty","editorState","setEditorState","handleSubmit","text","getCurrentContent","getPlainText","trim","length","sendMessage","querySelectorAll","forEach","el","p","textContent","rule","rules","arabic_alpha","arabic_num","persian_alpha","persian_num","punctuation_marks","match","hasPersianChar","textarea","current","focus","ref","keyBindingFn","shiftKey","Draft","getDefaultKeyBinding","handleKeyCommand","command","editor","InfinityPagination","wrapperElement","loadingUp","setLoadingTop","loadingDown","setLoadingDown","hasNext","setHasNext","hasPrev","setHasPrev","mountedKey","setMountedKey","loadMore","promise","loadPrev","loadNext","wrapperDom","currentScrollHeight","scrollHeight","clientHeight","includes","catch","finally","scrollTop","scroll_container","inView","loading_container","LinearProgress","messages","Promise","resolve","console","log","isMine","mine","content","Main","setMessages","setTimeout","Dialog","closePopup","maxWidth","String","popupUser","messenger","Messenger","Boolean","window","location","hostname","initialState","reducers","action","setItem","store","createStore","combineReducers","createMemoryHistory","ReactDOM","render","StrictMode","history","exact","path","component","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.45667308.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"aside\":\"aside_aside__30wd6\",\"active\":\"aside_active__sNfKH\",\"full_width\":\"aside_full_width__3SLr6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scroll_container\":\"pagination_scroll_container__3a-eM\",\"loading_container\":\"pagination_loading_container__1aRvS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"user_user__1dsTx\",\"contents\":\"user_contents__qURXf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"aside-header_header__hSbem\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"main-header_header__3lzfN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"main-editor_editor__1cVms\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"main-textarea_textarea__219XA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main_main__75oHH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messenger\":\"messenger_messenger__1m3MK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"profile_content__7Z4xk\"};","import React, { FC, memo } from \"react\";\nimport { shallowEqual } from \"../libs/shallowEqual\";\nimport { direction } from \"../themes\";\nimport styles from \"./avatar.module.scss\";\n\nexport enum AvatarSizeType {\n  SMALL = \"SMALL\",\n  MEDIUM = \"MEDIUM\",\n  LARGE = \"LARGE\",\n}\n\nexport type AvatarProps = {\n  initials: string;\n  unreadCount?: number;\n  avatar?: string;\n  color: string;\n  size?: AvatarSizeType;\n};\n\nconst AvatarComponent: FC<AvatarProps> = (props) => {\n  return (\n    <div\n      className={`${styles.avatar} ${props.size === AvatarSizeType.SMALL && styles.small} ${props.size === AvatarSizeType.LARGE && styles.large} ${direction === \"rtl\" ? \"ml-2\" : \"mr-2\"}`}\n      style={{\n        backgroundColor: props.color,\n        backgroundImage: `url('${props.avatar}')`,\n      }}\n    >\n      {props.unreadCount !== undefined && props.unreadCount > 0 && <span className={`small ${styles.avatar_badge}`}>{props.unreadCount}</span>}\n      <span className=\"text-uppercase\">{props.avatar === undefined && props.initials}</span>\n    </div>\n  );\n};\n\nexport default memo(AvatarComponent, shallowEqual);\n","export const ROUTE_ROOT = `/`;\nexport const ROUTE_MESSENGER_CHAT = `${ROUTE_ROOT}:id?/`;\n","export const fromNow: (timestamp: number) => string = (timestamp: number) => {\n  if (timestamp === 0) return `${\"خیلی وقت پیش\"}`;\n\n  let difference = Math.floor(Date.now() / 1000) - timestamp;\n\n  const yearsDifference = Math.floor(difference / 60 / 60 / 24 / 365);\n  if (yearsDifference > 0) return `${yearsDifference} ${\"سال\"} ${\"پیش\"}`;\n\n  const monthsDifference = Math.floor(difference / 60 / 60 / 24 / 30);\n  if (monthsDifference > 0) return `${monthsDifference} ${\"ماه\"} ${\"پیش\"}`;\n\n  const weeksDifference = Math.floor(difference / 60 / 60 / 24 / 7);\n  if (weeksDifference > 0) return `${weeksDifference} ${\"هفته\"} ${\"پیش\"}`;\n\n  const daysDifference = Math.floor(difference / 60 / 60 / 24);\n  if (daysDifference > 0) return `${daysDifference} ${\"روز\"} ${\"پیش\"}`;\n\n  const hoursDifference = Math.floor(difference / 60 / 60);\n  if (hoursDifference > 0) return `${hoursDifference} ${\"ساعت\"} ${\"پیش\"}`;\n\n  const minutesDifference = Math.floor(difference / 60);\n  if (minutesDifference > 0) return `${minutesDifference} ${\"دقیقه\"} ${\"پیش\"}`;\n\n  return `${\"چند لحظه پیش\"}`;\n};\n","import { functions, isEqual, isObject, omit } from \"lodash\";\nimport { PropsWithChildren } from \"react\";\n\nexport const shallowEqual: (value: PropsWithChildren<any>, other: PropsWithChildren<any>) => boolean = (value: PropsWithChildren<any>, other: PropsWithChildren<any>) => {\n  isObject(value) && (value = omit(value, functions(value)));\n  isObject(other) && (other = omit(other, functions(other)));\n  return isEqual(value, other);\n};\n","import { colors } from \"@material-ui/core\";\nimport { ThemeOptions } from \"@material-ui/core/styles/createMuiTheme\";\nimport \"./dark.scss\";\n\nconst dark: ThemeOptions = {\n  palette: {\n    type: \"dark\",\n    primary: {\n      light: colors.indigo[\"300\"],\n      main: colors.indigo[\"500\"],\n      dark: colors.indigo[\"700\"],\n      contrastText: \"#ffffff\",\n    },\n    secondary: {\n      light: colors.pink[\"300\"],\n      main: colors.pink[\"500\"],\n      dark: colors.pink[\"700\"],\n      contrastText: \"#ffffff\",\n    },\n  },\n};\n\nexport default dark;\n","import { colors } from \"@material-ui/core\";\nimport { ThemeOptions } from \"@material-ui/core/styles/createMuiTheme\";\nimport \"./light.scss\";\n\nconst light: ThemeOptions = {\n  palette: {\n    type: \"light\",\n    primary: {\n      light: colors.indigo[\"300\"],\n      main: colors.indigo[\"500\"],\n      dark: colors.indigo[\"700\"],\n      contrastText: \"#ffffff\",\n    },\n    secondary: {\n      light: colors.pink[\"300\"],\n      main: colors.pink[\"500\"],\n      dark: colors.pink[\"700\"],\n      contrastText: \"#ffffff\",\n    },\n  },\n};\n\nexport default light;\n","import { createMuiTheme, CssBaseline, Theme, ThemeProvider } from \"@material-ui/core\";\nimport { enUS, faIR } from \"@material-ui/core/locale\";\nimport React, { FC, memo, PropsWithChildren } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { shallowEqual } from \"../libs/shallowEqual\";\nimport { ReducersType } from \"../store\";\nimport { ThemeType } from \"../store/theme/types\";\nimport dark from \"./dark\";\nimport light from \"./light\";\n\ntype DirectionsType = \"rtl\" | \"ltr\";\n\nexport const direction: DirectionsType = (localStorage.getItem(\"direction\") as DirectionsType) || \"rtl\";\n\nconst themes = {\n  DARK: dark,\n  LIGHT: light,\n};\n\nconst themeGenerator: (theme: ThemeType) => Theme = (theme: ThemeType) => {\n  document.querySelector(\"html\")?.setAttribute(\"data-theme\", theme);\n  document.querySelector(\"body\")?.setAttribute(\"dir\", direction);\n  return createMuiTheme(\n    {\n      direction: direction,\n      typography: {\n        fontFamily: \"var(--primary-font)\",\n      },\n      shape: {\n        borderRadius: 10,\n      },\n      ...themes[theme],\n    },\n    direction === \"rtl\" ? faIR : enUS\n  );\n};\n\nconst MaterialTheme: FC<PropsWithChildren<{}>> = (props) => {\n  const theme = useSelector<ReducersType, ThemeType>((state) => state.theme.theme, shallowEqual);\n\n  return (\n    <ThemeProvider theme={themeGenerator(theme)}>\n      <CssBaseline />\n      <>{props.children}</>\n    </ThemeProvider>\n  );\n};\n\nexport default memo(MaterialTheme, shallowEqual);\n","import { Button } from \"@material-ui/core\";\nimport React, { DOMAttributes, FC, memo } from \"react\";\nimport { shallowEqual } from \"../../libs/shallowEqual\";\nimport AvatarComponent, { AvatarProps } from \"../avatar\";\nimport styles from \"./user.module.scss\";\n\nexport type UserProps = AvatarProps & {\n  id?: string;\n  name: string;\n  time?: string;\n  message?: string;\n  onClick?: DOMAttributes<HTMLElement>[\"onClick\"];\n};\n\nconst UserComponent: FC<UserProps> = (props) => {\n  return (\n    <Button fullWidth className={`justify-content-start font-weight-normal text-nowrap ${styles.user}`} onClick={props.onClick}>\n      <div className=\"col-auto\">\n        <AvatarComponent initials={props.initials} unreadCount={props.unreadCount} avatar={props.avatar} color={props.color} size={props.size} />\n      </div>\n      <div className={`col text-start ${styles.contents}`}>\n        <div className=\"d-flex justify-content-between\">\n          <h3 className=\"my-0 text-ellipsis text-capitalize\">{props.name}</h3>\n          {props.time !== undefined && <time className=\"font-weight-light small d-none d-sm-block\">{props.time}</time>}\n        </div>\n        {props.message !== undefined && <p className=\"my-0 font-weight-light text-ellipsis text-capitalize\">{props.message}</p>}\n      </div>\n    </Button>\n  );\n};\n\nexport default memo(UserComponent, shallowEqual);\n","import React, { FC, memo } from \"react\";\nimport { ContactsType } from \"../containers/aside-contacts\";\nimport { fromNow } from \"../libs/date\";\nimport { shallowEqual } from \"../libs/shallowEqual\";\nimport { direction } from \"../themes\";\nimport { AvatarSizeType } from \"./avatar\";\nimport UserComponent from \"./modules/user\";\n\ntype Props = {\n  contacts: ContactsType;\n  openUserPopup: (id: string) => void;\n};\n\nconst AsideContactsComponent: FC<Props> = (props) => {\n  return (\n    <div dir={direction}>\n      {props.contacts.map((contact) => (\n        <UserComponent\n          onClick={() => props.openUserPopup(contact.id)}\n          size={AvatarSizeType.MEDIUM}\n          key={contact.id}\n          initials={contact.name.charAt(0)}\n          avatar={contact.avatar}\n          color={contact.color}\n          name={contact.name}\n          message={fromNow(contact.time)}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(AsideContactsComponent, shallowEqual);\n","export const BASE_URL = `https://5f8fd447693e730016d7b78d.mockapi.io/api/v1`;\nexport const GET_CONTACTS = `${BASE_URL}/contacts`;\nexport const GET_MEMBERS = `${BASE_URL}/members`;\nexport const GET_MESSAGES = `${BASE_URL}/messages`;\n","import axios, { AxiosPromise, AxiosRequestConfig } from \"axios\";\n\naxios.defaults.headers.common[\"Accept\"] = \"application/json\";\naxios.defaults.headers.common[\"Content-Type\"] = \"application/json\";\naxios.defaults.headers.post[\"Content-Type\"] = \"multipart/form-data\";\naxios.defaults.headers.common[\"X-Requested-With\"] = \"XMLHttpRequest\";\n\ntype AxiosRequestConfigType = AxiosRequestConfig & {\n  urlParams?: {\n    [key: string]: string;\n  };\n};\n\nexport const setRestParams: (request: AxiosRequestConfigType) => AxiosRequestConfig = (request: AxiosRequestConfigType) => {\n  if (request.urlParams !== undefined) {\n    for (let param in request.urlParams) {\n      request.url = request.url?.replace(`{{${param}}}`, request.urlParams[param]);\n    }\n  }\n  delete request.urlParams;\n  return request;\n};\n\nexport const restHandler: (request: AxiosRequestConfigType) => AxiosPromise = (request: AxiosRequestConfigType) => {\n  return axios(setRestParams(request));\n};\n","import { UserProps } from \"../../components/modules/user\";\n\nexport const TOGGLE_THEME = \"TOGGLE_THEME\";\nexport const TOGGLE_ASIDE_STATUS = \"TOGGLE_ASIDE_STATUS\";\nexport const SET_POPUP_USER = \"SET_POPUP_USER\";\n\nexport enum ThemeType {\n  DARK = \"DARK\",\n  LIGHT = \"LIGHT\",\n}\n\nexport type AsideStatusType = boolean;\n\nexport type PopupUserType = UserProps | undefined;\n\nexport type ThemeStateType = {\n  theme: ThemeType;\n  asideStatus: AsideStatusType;\n  popupUser: PopupUserType;\n};\n\nexport type ToggleThemeActionType = {\n  type: typeof TOGGLE_THEME;\n};\n\nexport type ToggleAsideStatusActionType = {\n  type: typeof TOGGLE_ASIDE_STATUS;\n  payload?: AsideStatusType;\n};\n\nexport type SetPopupUserActionType = {\n  type: typeof SET_POPUP_USER;\n  payload?: PopupUserType;\n};\n\nexport type ThemeActionTypes = ToggleThemeActionType | ToggleAsideStatusActionType | SetPopupUserActionType;\n","import { SET_POPUP_USER, SetPopupUserActionType, TOGGLE_ASIDE_STATUS, TOGGLE_THEME, ToggleAsideStatusActionType, ToggleThemeActionType } from \"./types\";\n\nexport const toggleTheme = (): ToggleThemeActionType => ({\n  type: TOGGLE_THEME,\n});\n\nexport const toggleAsideStatus = (payload?: ToggleAsideStatusActionType[\"payload\"]): ToggleAsideStatusActionType => ({\n  type: TOGGLE_ASIDE_STATUS,\n  payload: payload,\n});\n\nexport const setPopupUser = (payload?: SetPopupUserActionType[\"payload\"]): SetPopupUserActionType => ({\n  type: SET_POPUP_USER,\n  payload: payload,\n});\n","import { AppBar, Tab, Tabs } from \"@material-ui/core\";\nimport ChatBubbleOutlineOutlinedIcon from \"@material-ui/icons/ChatBubbleOutlineOutlined\";\nimport PermContactCalendarOutlinedIcon from \"@material-ui/icons/PermContactCalendarOutlined\";\nimport React, { FC, memo, useState } from \"react\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport AsideContacts from \"../containers/aside-contacts\";\nimport AsideHeader from \"../containers/aside-header\";\nimport AsideMembers from \"../containers/aside-members\";\nimport { shallowEqual } from \"../libs/shallowEqual\";\nimport { AsideStatusType } from \"../store/theme/types\";\nimport { direction } from \"../themes\";\nimport styles from \"./aside.module.scss\";\n\nenum AsideTabs {\n  CHATS = 0,\n  CONTACTS = 1,\n}\n\ntype Props = {\n  asideStatus: AsideStatusType;\n  isInChat: boolean;\n  closeAside: () => void;\n};\n\nconst AsideComponent: FC<Props> = (props) => {\n  const [index, setIndex] = useState<AsideTabs>(AsideTabs.CHATS);\n\n  return (\n    <aside className={`shadow h-100 d-flex flex-column justify-content-start ${styles.aside} ${props.asideStatus ? styles.active : props.isInChat ? \"\" : styles.full_width}`}>\n      <AsideHeader />\n      <SwipeableViews className=\"col p-0\" axis={direction === \"rtl\" ? \"x\" : \"x-reverse\"} index={index} onChangeIndex={setIndex}>\n        <AsideMembers />\n        <AsideContacts />\n      </SwipeableViews>\n      <AppBar position=\"static\" className=\"shadow-lg\">\n        <Tabs color=\"primary\" indicatorColor=\"secondary\" value={index} onChange={(e, v) => setIndex(v)}>\n          <Tab value={AsideTabs.CONTACTS} className=\"col\" icon={<PermContactCalendarOutlinedIcon />} />\n          <Tab value={AsideTabs.CHATS} className=\"col\" icon={<ChatBubbleOutlineOutlinedIcon />} />\n        </Tabs>\n      </AppBar>\n    </aside>\n  );\n};\n\nexport default memo(AsideComponent, shallowEqual);\n","import React, { FC, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport AsideContactsComponent from \"../components/aside-contacts\";\nimport { GET_CONTACTS } from \"../constants/webservices\";\nimport { restHandler } from \"../libs/rest\";\nimport { setPopupUser, toggleAsideStatus } from \"../store/theme/actions\";\n\nexport type ContactsType = Array<{\n  id: string;\n  time: number;\n  name: string;\n  avatar: string;\n  message: string;\n  color: string;\n}>;\n\nconst AsideContacts: FC = () => {\n  const dispatch = useDispatch();\n  const [contacts, setContacts] = useState<ContactsType>([]);\n\n  const openUserPopup = (id: string) => {\n    const contact = contacts.find((c) => c.id === id);\n    if (contact !== undefined) {\n      dispatch(\n        setPopupUser({\n          ...contact,\n          initials: contact.name.charAt(0),\n          time: `${contact.time}`,\n        })\n      );\n    }\n    dispatch(toggleAsideStatus(false));\n  };\n\n  useEffect(() => {\n    restHandler({\n      url: GET_CONTACTS,\n    }).then((res) => setContacts(res.data));\n  }, []);\n\n  return <AsideContactsComponent contacts={contacts} openUserPopup={openUserPopup} />;\n};\n\nexport default AsideContacts;\n","import { TextField, withStyles } from \"@material-ui/core\";\n\nexport const RoundedTextField = withStyles({\n  root: {\n    \"& label.Mui-focused\": {\n      color: \"green\",\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& input\": {\n        padding: \"10px\",\n      },\n      \"& fieldset\": {\n        borderRadius: \"100px\",\n        borderColor: \"transparent\",\n        backgroundColor: \"rgba(0, 0, 0, 0.04)\",\n      },\n      \"[data-theme='DARK'] & fieldset\": {\n        backgroundColor: \"rgba(255, 255, 255, 0.08)\",\n      },\n      \"&:hover fieldset\": {\n        borderWidth: 2,\n      },\n    },\n  },\n})(TextField);\n","import { IconButton, Menu, MenuItem } from \"@material-ui/core\";\nimport { PopoverProps } from \"@material-ui/core/Popover\";\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\nimport Brightness4OutlinedIcon from \"@material-ui/icons/Brightness4Outlined\";\nimport HighlightOffOutlinedIcon from \"@material-ui/icons/HighlightOffOutlined\";\nimport MenuOutlinedIcon from \"@material-ui/icons/MenuOutlined\";\nimport SettingsOutlinedIcon from \"@material-ui/icons/SettingsOutlined\";\nimport React, { FC, memo, useState } from \"react\";\nimport { shallowEqual } from \"../libs/shallowEqual\";\nimport { direction } from \"../themes\";\nimport styles from \"./aside-header.module.scss\";\nimport { RoundedTextField } from \"./modules/inputs\";\n\ntype Props = {\n  toggleTheme: () => void;\n};\n\nconst AsideHeaderComponent: FC<Props> = (props) => {\n  const [anchorEl, setAnchorEl] = useState<PopoverProps[\"anchorEl\"] | undefined>(undefined);\n  const closeMenu = () => setAnchorEl(undefined);\n\n  return (\n    <header className={`shadow-sm d-flex justify-content-between align-items-center py-2 ${styles.header}`}>\n      <IconButton className={direction === \"rtl\" ? \"ml-1\" : \"mr-1\"} onClick={(e) => setAnchorEl(e.currentTarget)}>\n        <MenuOutlinedIcon />\n      </IconButton>\n      <Menu anchorEl={anchorEl} keepMounted open={anchorEl !== undefined} onClose={closeMenu}>\n        <MenuItem onClick={closeMenu}>\n          <AccountCircleOutlinedIcon color=\"action\" />\n          <span className=\"mx-3\">پروفایل</span>\n        </MenuItem>\n        <MenuItem onClick={closeMenu}>\n          <SettingsOutlinedIcon color=\"action\" />\n          <span className=\"mx-3\">تنظیمات</span>\n        </MenuItem>\n        <MenuItem onClick={closeMenu}>\n          <HighlightOffOutlinedIcon color=\"action\" />\n          <span className=\"mx-3\">خروج</span>\n        </MenuItem>\n      </Menu>\n      <RoundedTextField placeholder=\"جستجو\" variant=\"outlined\" fullWidth />\n      <IconButton className={direction === \"rtl\" ? \"mr-1\" : \"ml-1\"} onClick={props.toggleTheme}>\n        <Brightness4OutlinedIcon />\n      </IconButton>\n    </header>\n  );\n};\n\nexport default memo(AsideHeaderComponent, shallowEqual);\n","import React, { FC } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport AsideHeaderComponent from \"../components/aside-header\";\nimport { toggleTheme } from \"../store/theme/actions\";\n\nconst AsideHeader: FC = () => {\n  const dispatch = useDispatch();\n\n  return <AsideHeaderComponent toggleTheme={() => dispatch(toggleTheme())} />;\n};\n\nexport default AsideHeader;\n","import React, { FC, memo } from \"react\";\nimport { ROUTE_MESSENGER_CHAT } from \"../constants/routes\";\nimport { MembersType } from \"../containers/aside-members\";\nimport { memoryHistory } from \"../index\";\nimport { fromNow } from \"../libs/date\";\nimport { shallowEqual } from \"../libs/shallowEqual\";\nimport { direction } from \"../themes\";\nimport { AvatarSizeType } from \"./avatar\";\nimport UserComponent from \"./modules/user\";\n\ntype Props = {\n  members: MembersType;\n  closeAside: () => void;\n};\n\nconst AsideMembersComponent: FC<Props> = (props) => {\n  return (\n    <div dir={direction}>\n      {props.members.map((member) => (\n        <UserComponent\n          onClick={() => {\n            memoryHistory.push(ROUTE_MESSENGER_CHAT.replace(\":id?\", member.id), {\n              id: member.id,\n              initials: member.name.charAt(0),\n              avatar: member.avatar,\n              color: member.color,\n              name: member.name,\n              message: fromNow(member.time),\n            });\n            props.closeAside();\n          }}\n          key={member.id}\n          initials={member.name.charAt(0)}\n          unreadCount={member.unreadCount}\n          avatar={member.avatar}\n          color={member.color}\n          name={member.name}\n          time={fromNow(member.time)}\n          message={member.message}\n          size={AvatarSizeType.MEDIUM}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(AsideMembersComponent, shallowEqual);\n","import React, { FC, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport AsideMembersComponent from \"../components/aside-members\";\nimport { GET_MEMBERS } from \"../constants/webservices\";\nimport { restHandler } from \"../libs/rest\";\nimport { toggleAsideStatus } from \"../store/theme/actions\";\n\nexport type MembersType = Array<{\n  id: string;\n  time: number;\n  name: string;\n  avatar: string;\n  message: string;\n  color: string;\n  unreadCount: number;\n}>;\n\nconst AsideMembers: FC = () => {\n  const dispatch = useDispatch();\n  const [members, setMembers] = useState<MembersType>([]);\n\n  useEffect(() => {\n    restHandler({\n      url: GET_MEMBERS,\n    }).then((res) => setMembers(res.data));\n  }, []);\n\n  return <AsideMembersComponent members={members} closeAside={() => dispatch(toggleAsideStatus(false))} />;\n};\n\nexport default AsideMembers;\n","import React, { FC } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport AsideComponent from \"../components/aside\";\nimport { shallowEqual } from \"../libs/shallowEqual\";\nimport { ReducersType } from \"../store\";\nimport { toggleAsideStatus } from \"../store/theme/actions\";\nimport { AsideStatusType } from \"../store/theme/types\";\nimport { ChatParamsType } from \"./main\";\n\nconst Aside: FC = () => {\n  const { id } = useParams<ChatParamsType>();\n  const asideStatus = useSelector<ReducersType, AsideStatusType>((state) => state.theme.asideStatus, shallowEqual);\n  const dispatch = useDispatch();\n\n  return <AsideComponent asideStatus={asideStatus} isInChat={id !== undefined} closeAside={() => dispatch(toggleAsideStatus(false))} />;\n};\n\nexport default Aside;\n","import { IconButton } from \"@material-ui/core\";\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\nimport MenuOutlinedIcon from \"@material-ui/icons/MenuOutlined\";\nimport React, { FC, memo } from \"react\";\nimport { ROUTE_ROOT } from \"../constants/routes\";\nimport { memoryHistory } from \"../index\";\nimport { shallowEqual } from \"../libs/shallowEqual\";\nimport { AsideStatusType } from \"../store/theme/types\";\nimport { AvatarSizeType } from \"./avatar\";\nimport styles from \"./main-header.module.scss\";\nimport UserComponent, { UserProps } from \"./modules/user\";\n\ntype Props = {\n  toggleAside: () => void;\n  asideStatus: AsideStatusType;\n  isInChat: boolean;\n  user: UserProps | undefined;\n};\n\nconst MainHeaderComponent: FC<Props> = (props) => {\n  return (\n    <header className=\"shadow-sm\">\n      <div className={`d-flex justify-content-between align-items-center py-2 ${styles.header} ${props.isInChat ? \"\" : \"d-sm-none\"}`}>\n        {props.isInChat && (\n          <>\n            <IconButton onClick={() => memoryHistory.push(ROUTE_ROOT)}>\n              <CloseOutlinedIcon />\n            </IconButton>\n            <UserComponent\n              size={AvatarSizeType.SMALL}\n              initials={props.user?.initials || \"\"}\n              avatar={props.user?.avatar}\n              color={props.user?.color || \"\"}\n              name={props.user?.name || \"\"}\n              message={props.user?.message}\n            />\n          </>\n        )}\n        <IconButton className=\"d-block d-sm-none\" onClick={props.toggleAside}>\n          {props.asideStatus ? <CloseOutlinedIcon /> : <MenuOutlinedIcon />}\n        </IconButton>\n      </div>\n    </header>\n  );\n};\n\nexport default memo(MainHeaderComponent, shallowEqual);\n","import React, { FC } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport MainHeaderComponent from \"../components/main-header\";\nimport { UserProps } from \"../components/modules/user\";\nimport { shallowEqual } from \"../libs/shallowEqual\";\nimport { ReducersType } from \"../store\";\nimport { toggleAsideStatus } from \"../store/theme/actions\";\nimport { AsideStatusType } from \"../store/theme/types\";\nimport { ChatParamsType } from \"./main\";\n\nconst MainHeader: FC = () => {\n  const dispatch = useDispatch();\n  const { id } = useParams<ChatParamsType>();\n  const asideStatus = useSelector<ReducersType, AsideStatusType>((state) => state.theme.asideStatus, shallowEqual);\n\n  const { state } = useLocation();\n  const { initials, avatar, color, name, message } = (state as UserProps) || {};\n\n  return <MainHeaderComponent toggleAside={() => dispatch(toggleAsideStatus())} asideStatus={asideStatus} isInChat={id !== undefined} user={{ initials, avatar, color, name, message }} />;\n};\n\nexport default MainHeader;\n","import { IconButton } from \"@material-ui/core\";\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\nimport Draft, { Editor, EditorState } from \"draft-js\";\nimport React, { FC, memo, useEffect, useRef, useState } from \"react\";\nimport { hasPersianChar } from \"../libs/data\";\nimport { shallowEqual } from \"../libs/shallowEqual\";\nimport { direction } from \"../themes\";\nimport styles from \"./main-textarea.module.scss\";\n\ntype Props = {\n  sendMessage: (content: string) => void;\n};\n\nconst MainTextareaComponent: FC<Props> = (props) => {\n  const editorRef = useRef(null);\n  const [editorState, setEditorState] = useState<EditorState>(EditorState.createEmpty());\n\n  // const insertText: (content: string) => void = (content: string) => {\n  //   const newContent = Modifier.replaceText(editorState.getCurrentContent(), editorState.getSelection(), content);\n  //   setEditorState(EditorState.push(editorState, newContent, \"insert-characters\"));\n  //   setTimeout(() => (editorRef.current as any)?.focus(), 500);\n  // };\n\n  const handleSubmit: () => void = () => {\n    setEditorState(EditorState.createEmpty());\n    const text = editorState.getCurrentContent().getPlainText();\n    if (text.trim().length > 0) {\n      props.sendMessage(text);\n    }\n  };\n\n  const changeDirection: () => void = () => {\n    document.querySelectorAll(\".public-DraftStyleDefault-ltr, .public-DraftStyleDefault-rtl\").forEach((el) => {\n      const p = el as HTMLElement;\n      if (p.textContent === \"\" || hasPersianChar(p.textContent || \"\")) {\n        p.style.direction = \"rtl\";\n      } else {\n        p.style.direction = \"ltr\";\n      }\n    });\n  };\n\n  const keyBindingFn = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\" && !e.shiftKey) return \"handle_submit\";\n    return Draft.getDefaultKeyBinding(e);\n  };\n\n  const handleKeyCommand = (command: string) => {\n    if (command === \"handle_submit\") {\n      handleSubmit();\n      return \"handled\";\n    }\n    return \"not-handled\";\n  };\n\n  useEffect(() => changeDirection(), [editorState]);\n\n  return (\n    <>\n      <div className={`col ${styles.textarea}`} onClick={() => (editorRef.current as any)?.focus()} dir={direction}>\n        <Editor placeholder=\"بنویسید\" ref={editorRef} editorState={editorState} onChange={setEditorState} keyBindingFn={keyBindingFn} handleKeyCommand={handleKeyCommand} />\n      </div>\n      <IconButton color=\"primary\" onClick={handleSubmit}>\n        <SendOutlinedIcon />\n      </IconButton>\n    </>\n  );\n};\n\nexport default memo(MainTextareaComponent, shallowEqual);\n","export const hasPersianChar: (data: string) => boolean = (data: string) => {\n  const rules = {\n    arabic_alpha: \"ةكىيًٍە\",\n    arabic_num: \"٠١٢٣٤٥٦٧٨٩\",\n    persian_alpha: \"ءآأؤإئابتثجحخدذرزسشصضطظعغفقلمنهوَُِّٕپچژکگھی\",\n    persian_num: \"۰۱۲۳۴۵۶۷۸۹\",\n    punctuation_marks: \"،؛؟ـ٪٫٬\",\n  };\n  let rule: keyof typeof rules;\n  for (rule in rules) {\n    if (data.match(`[${rules[rule]}]`) !== null) return true;\n  }\n  return false;\n};\n","import { IconButton } from \"@material-ui/core\";\nimport EmojiEmotionsOutlinedIcon from \"@material-ui/icons/EmojiEmotionsOutlined\";\nimport React, { FC, memo } from \"react\";\nimport { shallowEqual } from \"../libs/shallowEqual\";\nimport styles from \"./main-editor.module.scss\";\nimport MainTextareaComponent from \"./main-textarea\";\n\ntype Props = {\n  sendMessage: (content: string) => void;\n  isInChat: boolean;\n};\n\nconst MainEditorComponent: FC<Props> = (props) => {\n  return (\n    <div className={`shadow d-flex align-items-end ${styles.editor} ${props.isInChat ? \"\" : \"invisible\"}`} dir=\"ltr\">\n      <IconButton color=\"primary\">\n        <EmojiEmotionsOutlinedIcon />\n      </IconButton>\n      <MainTextareaComponent sendMessage={props.sendMessage} />\n    </div>\n  );\n};\n\nexport default memo(MainEditorComponent, shallowEqual);\n","import { LinearProgress } from \"@material-ui/core\";\nimport React, { FC, memo, useEffect, useRef, useState } from \"react\";\nimport { InView } from \"react-intersection-observer\";\nimport { shallowEqual } from \"../../libs/shallowEqual\";\nimport styles from \"./pagination.module.scss\";\n\nexport type InfinityPaginationProps = {\n  children?: any;\n  mountedKey?: string;\n  loadNext?: () => Promise<any>;\n  loadPrev?: () => Promise<any>;\n};\n\nexport const InfinityPagination: FC<InfinityPaginationProps> = memo((props) => {\n  const wrapperElement = useRef(null);\n\n  const [loadingUp, setLoadingTop] = useState<boolean>(false);\n  const [loadingDown, setLoadingDown] = useState<boolean>(false);\n  const [hasNext, setHasNext] = useState<boolean>(true);\n  const [hasPrev, setHasPrev] = useState<boolean>(true);\n  const [mountedKey, setMountedKey] = useState<string>(\"\");\n\n  useEffect(() => {\n    setLoadingTop(false);\n    setLoadingDown(false);\n    setHasNext(true);\n    setHasPrev(true);\n    setMountedKey(\"\");\n  }, [props.mountedKey]);\n\n  const loadMore: (direction: \"UP\" | \"DOWN\") => void = (direction: \"UP\" | \"DOWN\") => {\n    let promise: Promise<any> | undefined;\n    if (direction === \"UP\" && hasPrev && props.loadPrev !== undefined && !loadingUp) {\n      (promise = props.loadPrev()) && setLoadingTop(true);\n    } else if (direction === \"DOWN\" && hasNext && props.loadNext !== undefined && !loadingDown) {\n      (promise = props.loadNext()) && setLoadingDown(true);\n    }\n    if (promise !== undefined) {\n      const wrapperDom = (wrapperElement.current as unknown) as HTMLElement;\n      const currentScrollHeight = wrapperDom.scrollHeight;\n      promise\n        ?.then(() => {\n          if (wrapperDom.scrollHeight <= wrapperDom.clientHeight && [hasNext, hasPrev].includes(false)) {\n            setMountedKey(`${Date.now()}`);\n          }\n        })\n        ?.catch(() => {\n          direction === \"UP\" ? setHasPrev(false) : setHasNext(false);\n        })\n        ?.finally(() => {\n          if (direction === \"UP\") {\n            wrapperDom.scrollTop = wrapperDom.scrollHeight - currentScrollHeight;\n          }\n          if (direction === \"UP\") {\n            setLoadingTop(false);\n          } else if (direction === \"DOWN\") {\n            setLoadingDown(false);\n          }\n        });\n    }\n  };\n\n  const loadToTop: (inView: boolean) => false | void = (inView: boolean) => inView && loadMore(\"UP\");\n  const loadToBottom: (inView: boolean) => false | void = (inView: boolean) => inView && loadMore(\"DOWN\");\n\n  return (\n    <div className={styles.scroll_container} ref={wrapperElement}>\n      <InView key={`up_${mountedKey || props.mountedKey}`} onChange={loadToTop} className={styles.loading_container} children={loadingUp && <LinearProgress />} />\n      <>{props.children}</>\n      <InView key={`down_${mountedKey || props.mountedKey}`} onChange={loadToBottom} className={styles.loading_container} children={loadingDown && <LinearProgress />} />\n    </div>\n  );\n}, shallowEqual);\n","import React, { FC, memo } from \"react\";\nimport { MessagesType } from \"../containers/main\";\nimport { fromNow } from \"../libs/date\";\nimport { shallowEqual } from \"../libs/shallowEqual\";\nimport { direction } from \"../themes\";\nimport styles from \"./main-messages.module.scss\";\nimport { InfinityPagination } from \"./modules/pagination\";\n\ntype Props = {\n  messages: MessagesType;\n};\n\nconst MainMessagesComponent: FC<Props> = (props) => {\n  const loadNext = () => {\n    return new Promise((resolve) => {\n      console.log(\"loadNext\");\n      resolve();\n    });\n  };\n\n  const loadPrev = () => {\n    return new Promise((resolve) => {\n      console.log(\"loadPrev\");\n      resolve();\n    });\n  };\n\n  return (\n    <div className={`col overflow-auto ${styles.messages}`}>\n      <InfinityPagination loadNext={loadNext} loadPrev={loadPrev}>\n        {props.messages.map((message) => (\n          <div key={message.id} className={`p-2 my-2 ${styles.message} ${message.isMine ? styles.mine : \"\"}`}>\n            <div className=\"d-flex flex-wrap align-items-center\">\n              <p className={`text-justify p-0 m-0 ${styles.content}`}>{message.text}</p>\n              <time className={`col text-nowrap text-end ${styles.time} ${direction === \"rtl\" ? \"mr-2\" : \"ml-2\"}`}>{fromNow(message.time)}</time>\n            </div>\n          </div>\n        ))}\n      </InfinityPagination>\n    </div>\n  );\n};\n\nexport default memo(MainMessagesComponent, shallowEqual);\n","import React, { FC, memo } from \"react\";\nimport { MessagesType } from \"../containers/main\";\nimport MainHeader from \"../containers/main-header\";\nimport { shallowEqual } from \"../libs/shallowEqual\";\nimport MainEditorComponent from \"./main-editor\";\nimport MainMessagesComponent from \"./main-messages\";\nimport styles from \"./main.module.scss\";\n\ntype Props = {\n  sendMessage: (content: string) => void;\n  isInChat: boolean;\n  messages: MessagesType;\n};\n\nconst MainComponent: FC<Props> = (props) => {\n  return (\n    <main className={`shadow h-100 d-flex flex-column justify-content-between ${styles.main}`}>\n      <MainHeader />\n      {props.isInChat && <MainMessagesComponent messages={props.messages} />}\n      <MainEditorComponent sendMessage={props.sendMessage} isInChat={props.isInChat} />\n    </main>\n  );\n};\n\nexport default memo(MainComponent, shallowEqual);\n","import React, { FC, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport MainComponent from \"../components/main\";\nimport { GET_MESSAGES } from \"../constants/webservices\";\nimport { restHandler } from \"../libs/rest\";\n\nexport type MessagesType = Array<{\n  id: string;\n  time: number;\n  name: string;\n  text: string;\n  isMine: boolean;\n}>;\n\nexport type ChatParamsType = {\n  id: string | undefined;\n};\n\nconst Main: FC = () => {\n  const { id } = useParams<ChatParamsType>();\n  const [messages, setMessages] = useState<MessagesType>([]);\n\n  const sendMessage = (content: string) => {\n    setMessages((state: any) => [\n      ...state,\n      {\n        id: Date.now(),\n        time: Math.floor(Date.now() / 1000),\n        name: \"Alireza Maleki\",\n        text: content,\n        isMine: true,\n      },\n    ]);\n    setTimeout(() => {\n      setMessages((state: any) => [\n        ...state,\n        {\n          id: Date.now(),\n          time: Math.floor(Date.now() / 1000),\n          name: \"Customer\",\n          text: `reply to: ${content}`,\n          isMine: false,\n        },\n      ]);\n    }, 2000);\n  };\n\n  useEffect(() => {\n    restHandler({\n      url: GET_MESSAGES,\n    }).then((res) => setMessages(res.data));\n  }, []);\n\n  return <MainComponent messages={messages} sendMessage={sendMessage} isInChat={id !== undefined} />;\n};\n\nexport default Main;\n","import { Dialog, IconButton } from \"@material-ui/core\";\nimport ChatOutlinedIcon from \"@material-ui/icons/ChatOutlined\";\nimport PhoneOutlinedIcon from \"@material-ui/icons/PhoneOutlined\";\nimport React, { FC, memo } from \"react\";\nimport { ROUTE_MESSENGER_CHAT } from \"../../constants/routes\";\nimport { memoryHistory } from \"../../index\";\nimport { shallowEqual } from \"../../libs/shallowEqual\";\nimport { PopupUserType } from \"../../store/theme/types\";\nimport AvatarComponent, { AvatarSizeType } from \"../avatar\";\nimport styles from \"./profile.module.scss\";\n\ntype Props = {\n  member: PopupUserType;\n  closePopup: () => void;\n};\n\nconst ProfilePopup: FC<Props> = (props) => {\n  return (\n    <Dialog onClose={props.closePopup} open={props.member !== undefined} maxWidth=\"xs\">\n      <div className=\"d-flex justify-content-center pt-4\">\n        <AvatarComponent initials={props.member?.initials || \"A\"} avatar={props.member?.avatar} color={props.member?.color || \"teal\"} size={AvatarSizeType.LARGE} />\n      </div>\n      <div className={`text-center text-nowrap p-2 ${styles.content}`}>\n        <h3 className=\"mt-3 mb-0\">{props.member?.name}</h3>\n        <time className=\"small font-weight-lighter\">{props.member?.message}</time>\n        <div className=\"d-flex justify-content-center mt-3\">\n          <IconButton\n            color=\"primary\"\n            onClick={() => {\n              memoryHistory.push(ROUTE_MESSENGER_CHAT.replace(\":id?\", String(props.member?.id)), {\n                id: props.member?.id,\n                initials: props.member?.name.charAt(0),\n                avatar: props.member?.avatar,\n                color: props.member?.color,\n                name: props.member?.name,\n                message: props.member?.message,\n              });\n              props.closePopup();\n            }}\n          >\n            <ChatOutlinedIcon />\n          </IconButton>\n          <IconButton color=\"primary\">\n            <PhoneOutlinedIcon />\n          </IconButton>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default memo(ProfilePopup, shallowEqual);\n","import React, { FC, memo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Aside from \"../containers/aside\";\nimport Main from \"../containers/main\";\nimport { shallowEqual } from \"../libs/shallowEqual\";\nimport { ReducersType } from \"../store\";\nimport { setPopupUser } from \"../store/theme/actions\";\nimport { PopupUserType } from \"../store/theme/types\";\nimport styles from \"./messenger.module.scss\";\nimport ProfilePopup from \"./modules/profile\";\n\nconst MessengerComponent: FC = () => {\n  const dispatch = useDispatch();\n  const member = useSelector<ReducersType, PopupUserType>((state) => state.theme.popupUser, shallowEqual);\n\n  return (\n    <div className={`d-flex flex-nowrap ${styles.messenger}`}>\n      <Aside />\n      <Main />\n      <ProfilePopup closePopup={() => dispatch(setPopupUser(undefined))} member={member} />\n    </div>\n  );\n};\n\nexport default memo(MessengerComponent, shallowEqual);\n","import React, { FC } from \"react\";\nimport MessengerComponent from \"../components/messenger\";\n\nconst Messenger: FC = () => {\n  return <MessengerComponent />;\n};\n\nexport default Messenger;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { STORAGE_THEME } from \"../../constants/localStorage\";\nimport { SET_POPUP_USER, ThemeActionTypes, ThemeStateType, ThemeType, TOGGLE_ASIDE_STATUS, TOGGLE_THEME } from \"./types\";\n\nconst initialState: ThemeStateType = {\n  theme: (localStorage.getItem(STORAGE_THEME) as ThemeType) || ThemeType.LIGHT,\n  asideStatus: false,\n  popupUser: undefined,\n};\n\nexport const themeReducer = (state = initialState, action: ThemeActionTypes): ThemeStateType => {\n  switch (action.type) {\n    case TOGGLE_THEME: {\n      const theme = state.theme === ThemeType.LIGHT ? ThemeType.DARK : ThemeType.LIGHT;\n      localStorage.setItem(STORAGE_THEME, theme);\n      return {\n        ...state,\n        theme: theme,\n      };\n    }\n    case TOGGLE_ASIDE_STATUS: {\n      return {\n        ...state,\n        asideStatus: action.payload === undefined ? !state.asideStatus : action.payload,\n      };\n    }\n    case SET_POPUP_USER: {\n      return {\n        ...state,\n        popupUser: action.payload,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","export const STORAGE_THEME = \"theme\";\n","import { combineReducers, createStore } from \"redux\";\nimport { themeReducer } from \"./theme/reducers\";\n\nconst reducers = {\n  theme: themeReducer,\n};\n\nexport type ReducersType = {\n  [key in keyof typeof reducers]: ReturnType<typeof reducers[key]>;\n};\n\nconst store = createStore(combineReducers(reducers));\n\nexport default store;\n","import { createMemoryHistory } from \"history\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { Route, Router } from \"react-router-dom\";\nimport \"./assets/scss/index.scss\";\nimport { ROUTE_MESSENGER_CHAT } from \"./constants/routes\";\nimport Messenger from \"./containers/messenger\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store\";\nimport MaterialTheme from \"./themes\";\n\nexport const memoryHistory = createMemoryHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <MaterialTheme>\n        <Router history={memoryHistory}>\n          <Route exact path={ROUTE_MESSENGER_CHAT} component={Messenger} />\n        </Router>\n      </MaterialTheme>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"main-messages_messages__2j8y_\",\"message\":\"main-messages_message__2MbKz\",\"mine\":\"main-messages_mine__26BLD\",\"content\":\"main-messages_content__1RKV1\",\"time\":\"main-messages_time__2Rxvw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"avatar_avatar__1eMPV\",\"small\":\"avatar_small__2aW2E\",\"large\":\"avatar_large__r98I-\",\"avatar_badge\":\"avatar_avatar_badge__GumsF\"};"],"sourceRoot":""}